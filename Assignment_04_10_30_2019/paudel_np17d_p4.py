################################################################################
# Assignment No. --> <04>
# Name --> Nawaraj Paudel
# Date --> 11/02/2019
# Email --> np17d@my.fsu.edu
# Grader --> Gradon
# Recitation Section --> <01>
################################################################################

#INPUT
# This program takes the input as player's choice either Rock, Paper or Scissors
# Player chooses number corresponding to these three players. This program runs
# until either player is broken or game has been played maximum number of times
# we set allowed to be played, i.e. MAX_MOVES defined below. It also takes ran-
# dom number generated by pseudo random number generator 

#OUTPUT
# This program outputs as how many games are played, how many games are won by
# player1, player2 and how many games are tied. It also outputs the final money
# of each player and also tells the percentage og game won for each player

#SUMMARY
# This program compares the input between the player choice and choice generated
# by pseudo random number generator and decides who wins. After the game has
# been played the maximum number of times set or until either player is broken
# it prints the output with money each player has, how many times each player
# won and number of times games were tied; Plaer2 is Dr. Window

#ASSUMPTION
# It assumes user types integer for player1 choice and any key is pressed to
# continue to play the game

################################################################################
#                  **** IMPORT REQUIRED MODULE ***                             #
################################################################################
import random      # Generates Pseudo Random Numbers

################################################################################
#                  **** LIST GLOBAL CONSTANTS ***                              #
################################################################################
ROCK = 1
PAPER = 2
SCISSORS = 3
START_BET_MONEY = 100
BET_AMOUNT = 10
MAX_MOVES = 20

################################################################################
def main():
################################################################################
    player1Money, player2Money = START_BET_MONEY, START_BET_MONEY
    curPlayer1Money = 100  # priming read for while loop
    curPlayer2Money = 100
    player1Wins = 0        # set accumulator for running total
    player2Wins = 0        # for three for count loops defined
    numTies = 0            # below
    
    # priming read for key while loop
    key = input ( "\nPress any key to continue -->  " )
    print()
    while key != ' ':
        printIntro ()
        numMoves = 0     # count initialized/ priming read
        #this priming read should not be before key while loop
        while ( numMoves < MAX_MOVES and curPlayer1Money != 0
                and curPlayer2Money != 0):
            player1Move = playerChoice()
            # input validation
            while ( player1Move < ROCK ) or ( player1Move > SCISSORS):
                player1Move = playerChoice()

            stringPlayer1Move = stringPlayerChoice(player1Move)

            player2Move = computerChoice()

            stringPlayer2Move = stringComputerChoice(player2Move)

            winDecision = getWinner(player1Move,player2Move)
            
            # these two Money's update the pretest for while loop
            curPlayer1Money = updatePlayer1Money(winDecision, curPlayer1Money)

            curPlayer2Money = updatePlayer2Money(winDecision, curPlayer2Money)
            
            stringWinDecision = stringGetWinner(winDecision)

            matchFinalResult ( player1Move, stringPlayer1Move, player2Move\
             ,stringPlayer2Move, stringWinDecision, \
                        curPlayer1Money, curPlayer2Money, numMoves )
            # update accumulator defined above
            if (winDecision == -1):
                player1Wins += 1
            elif (winDecision == 1):
                player2Wins += 1
            else:
                numTies += 1

            numMoves += 1

        # print the final result after while loop is done..outside while loop
        printWinSummary ( player1Wins, player2Wins, numTies, numMoves )

        key = input ( "Press any key to continue -->  " )
    
################################################################################        
def printIntro():
################################################################################
    print("==========================******==========================\n\
               WELCOME TO THE GAME\n\
==========================******==========================\n\
               Rock, Paper, and Scissors \n\
==========================******==========================\n\
  This program plays the EXCITING game of Rock, Paper,and Scissors.\n\
Two players choose either Rock, Paper or Scissors, and the results of\n\
their picks are compared.  Each match is determined as follows:\n\
\n\
        Player 1     Player 2                    Result\n\
        --------     --------     ---------------------------------\n\
        Rock         Paper        Paper covers Rock. Player 2 wins!\n\
        Paper        Scissors     Scissors cut Paper. Player 2 wins!\n\
        Scissors     Rock         Rock breaks Scissors. Player 2 wins!\n\
        ---          ---          Any matching combo. A tie!\n\
\n\
  Now you are about to play a against world-class computer champion\n\
Dr. Windows. You are Player 1, and the computer is Player 2. Player 2's\n\
moves are randomly chosen by the computer. Both players start with ${}\n\
and the game is finished when either one player reaches $0 or there have\n\
been {} matches played. The bet per match is ${}.\n".format ( START_BET_MONEY,\
                                    MAX_MOVES, BET_AMOUNT ) )

################################################################################
def playerChoice ():
################################################################################
    return int ( input ("Player 1, Choose one out of following three choices\n\
     1. Rock\n\
     2. Paper\n\
     3. Scissors\n ->  "))

################################################################################
def stringPlayerChoice ( player1Move ):
################################################################################
    if ( player1Move == 1 ):
        return "Rock"
    elif ( player1Move == 2 ):
        return "Paper"
    else:
        return "Scissors"

################################################################################
def computerChoice ():
################################################################################
    return random.randint ( ROCK, SCISSORS )

################################################################################
def stringComputerChoice ( player2Move ):
################################################################################
    if player2Move == 1:
        return "Rock"
    elif player2Move == 2:
        return "Paper"
    else:
        return "Scissors"

################################################################################
def getWinner ( player1Move, player2Move ):
################################################################################
    #return -1 if player1 wins
    #return 1 if player2 wins
    #return 0 if tie
    if player1Move == player2Move:
        winDecision = 0
    elif player1Move == ROCK and player2Move == PAPER:
        winDecision = 1
    elif player1Move == PAPER and player2Move == SCISSORS:
        winDecision = 1
    elif player1Move == SCISSORS and player2Move == ROCK:
        winDecision = 1
    else:
        winDecision = -1
    return winDecision

################################################################################
def stringGetWinner ( winDecision ):
################################################################################
    if winDecision == 0:
        stringWinDecisoin = " It's a tie. "
    elif winDecision == 1:
        stringWinDecisoin = " Player2 wins. "
    else:
        stringWinDecisoin = " Player1 wins. "
    return stringWinDecisoin

################################################################################
def updatePlayer1Money ( winDecision, player1MoneyNow ):
################################################################################
    if winDecision == 0:
        updatedMoney = player1MoneyNow
    elif winDecision == 1:
        updatedMoney = player1MoneyNow - BET_AMOUNT
    else:
        updatedMoney = player1MoneyNow + BET_AMOUNT
    return updatedMoney

################################################################################
def updatePlayer2Money ( winDecision, player2MoneyNow ):
################################################################################
    if winDecision == 0:
        updatedMoney = player2MoneyNow
    elif winDecision == 1:
        updatedMoney = player2MoneyNow + BET_AMOUNT
    else:
        updatedMoney = player2MoneyNow - BET_AMOUNT
    return updatedMoney

################################################################################
def matchFinalResult ( player1Choice, stringPlayer1Choice, player2Choice\
         ,stringPlayer2Choice, stringVictorDecision, \
                    updatedPlayer1Money, updatedPlayer2Money,numPlay ):
################################################################################
    print( "=================================================================\n\
                        RESULT OF MOVE # {0:d}\n\
=================================================================\n\
   Player1\t  Player2\t   Winner\tPlayer1's\tPlayer2's\n\
Number  Action\t  Number  Action\t\tMoney     \tMoney\n\
{1:3d}  {2:1s} \t{3:3d}  {4:s}\t{5:s}\t{6:2d}\t\t{7:2d}\n"\
.format ( (numPlay+1), player1Choice, stringPlayer1Choice, player2Choice\
                           ,stringPlayer2Choice, stringVictorDecision, \
                           updatedPlayer1Money, updatedPlayer2Money ))

################################################################################
def printWinSummary ( player1Wins, player2Wins, numTies, MAX_MOVES ):
################################################################################
    player1WnisPc = ( player1Wins * 100 )/ MAX_MOVES
    player2WnisPc = ( player2Wins * 100 )/ MAX_MOVES
    print("==================================================================\n\
             FINAL RESULT OF MATCHOFF BETWEEN TWO CONTESTANTS\n\
==================================================================\n\
                Player1      Player2\n\
              ===========   ==========\n\
Games Won:  \t{0:2d}\t\t{1:2d}\n\
Percent Won:  \t{2:.1f}\t\t{3:.1f}\n\
Total Games Tied: {4:2d}\n\
Total Games Played: {5:2d}\n".format(player1Wins, player2Wins,\
                player1WnisPc, player2WnisPc, numTies, MAX_MOVES ))

    if ( player1Wins > player2Wins ):
        print(" The winner for today's overall match is Player1!\n")
    elif ( player2Wins > player1Wins ):
        print(" The winner for today's overall match is Player2!\n")
    else:
        print (" Both the player won the equal number of times.\
 Both players are even!\n")

    print ( " See you again! Thank you for stopping by.\n\
====================************====================\n" )

################################################################################
#                     *** CALL THE MAIN FUNCTION ***                           #
################################################################################
main ()    
################################################################################
